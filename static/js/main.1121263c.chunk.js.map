{"version":3,"sources":["component/forms/forms.tsx","component/twitter/tweets.tsx","component/twitter/tweet.tsx","component/twitter/timeline.tsx","component/twitter/twitter.tsx","component/todo/newTask.tsx","component/todo/task.tsx","component/todo/todos.tsx","component/todo/todo.tsx","app.tsx","index.tsx"],"names":["Forms","useState","name","setName","blood","setBlood","sex","setSex","isSport","setIsSport","isReading","setIsReading","isMusic","setIsMusic","isTravel","setIsTravel","comment","setComment","type","size","onChange","e","target","value","checked","rows","cols","Tweets","props","tweetText","setTweetText","onClick","handleSend","Tweet","tweetData","text","handleDelete","index","Timeline","tweets","map","tweet","key","Twitter","setTweets","newTweets","slice","concat","splice","NewTask","title","setTitle","description","setDescription","create","Task","task","Delete","Todos","tasks","Todo","setTasks","newTasks","App","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"4MAwIeA,EAtID,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,OAEQF,mBAAS,IAFjB,mBAEXG,EAFW,KAEJC,EAFI,OAGIJ,mBAAS,IAHb,mBAGXK,EAHW,KAGNC,EAHM,OAIYN,oBAAS,GAJrB,mBAIXO,EAJW,KAIFC,EAJE,OAKgBR,oBAAS,GALzB,mBAKXS,EALW,KAKAC,EALA,OAMYV,oBAAS,GANrB,mBAMXW,EANW,KAMFC,EANE,OAOcZ,oBAAS,GAPvB,mBAOXa,EAPW,KAODC,EAPC,OAQYd,mBAAS,IARrB,mBAQXe,EARW,KAQFC,EARE,KAUlB,OACE,oCACE,2BACE,oDAEE,2BACEC,KAAK,OACLhB,KAAK,OACLiB,KAAM,GACNC,SAAU,SAACC,GAAD,OAAOlB,EAAQkB,EAAEC,OAAOC,YAIxC,2BACE,0DAEE,4BAAQrB,KAAK,QAAQkB,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,OAAOC,SACtD,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,MAAd,eAIN,kCACE,gDACA,2BACE,+BACE,2BACEL,KAAK,QACLhB,KAAK,MACLqB,MAAM,OACNH,SAAU,kBAAMb,EAAO,WAL3B,WAUF,2BACE,+BACE,2BACEW,KAAK,QACLhB,KAAK,MACLqB,MAAM,SACNH,SAAU,kBAAMb,EAAO,aAL3B,YAWJ,kCACE,gDACA,2BACE,+BACE,2BACEW,KAAK,WACLhB,KAAK,QACLqB,MAAM,SACNC,QAAShB,EACTY,SAAU,kBAAMX,GAAYD,MANhC,6BAWF,2BACE,+BACE,2BACEU,KAAK,WACLhB,KAAK,QACLqB,MAAM,UACNC,QAASd,EACTU,SAAU,kBAAMT,GAAcD,MANlC,iBAWF,2BACE,+BACE,2BACEQ,KAAK,WACLhB,KAAK,QACLqB,MAAM,QACNC,QAASZ,EACTQ,SAAU,kBAAMP,GAAYD,MANhC,iBAWF,2BACE,+BACE,2BACEM,KAAK,WACLhB,KAAK,QACLqB,MAAM,SACNC,QAASV,EACTM,SAAU,kBAAML,GAAaD,MANjC,kBAYJ,2BACE,gEAEE,6BACA,8BACEZ,KAAK,WACLuB,KAAM,EACNC,KAAM,GACNN,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,OAAOC,YAI3C,2CAAOrB,GACP,iDAAQE,GACR,2CAAOE,GACP,uDAASE,EAAU,MAAQ,MAC3B,2CAAOE,EAAY,MAAQ,MAC3B,2CAAOE,EAAU,MAAQ,MACzB,2CAAOE,EAAW,MAAQ,MAC1B,uDAASE,KCxGAW,EArBuB,SAACC,GAAwB,IAAD,EAC1B3B,mBAAS,IADiB,mBACrD4B,EADqD,KAC1CC,EAD0C,KAE5D,OACE,6BACE,oCACO,IACL,2BAAOP,MAAOM,EAAWT,SAAU,SAAAC,GAAC,OAAIS,EAAaT,EAAEC,OAAOC,WAEhE,6BACE,4BACEQ,QAAS,WACPH,EAAMI,WAAWH,GACjBC,EAAa,MAHjB,YCQOG,EAVqB,SAACL,GACnC,OACE,kCACE,6BAAMA,EAAMM,UAAUhC,MACtB,6BAAM0B,EAAMM,UAAUC,MACtB,4BAAQJ,QAAS,kBAAMH,EAAMQ,aAAaR,EAAMS,SAAhD,YCKSC,EAf2B,SAACV,GACzC,OACE,6BACGA,EAAMW,OAAOC,KAAI,SAACC,EAAOJ,GAAR,OAChB,kBAAC,EAAD,CACEK,IAAKL,EACLA,MAAOA,EACPH,UAAWO,EACXL,aAAcR,EAAMQ,oBCafO,EAxBC,WAAO,IAAD,EACQ1C,mBAAsB,CAAC,CAAEC,KAAM,GAAIiC,KAAM,MADjD,mBACbI,EADa,KACLK,EADK,OAEI3C,mBAAiB,IAFrB,mBAEbC,EAFa,KAEPC,EAFO,KAepB,OACE,4CACO,2BAAOiB,SAAU,SAACC,GAAD,OAAOlB,EAAQkB,EAAEC,OAAOC,UAC9C,kBAAC,EAAD,CAAQS,WAdO,SAACH,GAClB,IAAMgB,EAAYN,EAAOO,QACzBF,EAAUC,EAAUE,OAAO,CAAE7C,KAAMA,EAAMiC,KAAMN,QAa7C,kBAAC,EAAD,CAAUU,OAAQA,EAAQH,aAVT,SAACC,GACpB,IAAMQ,EAAYN,EAAOO,QACzBD,EAAUG,OAAOX,EAAO,GACxBO,EAAUC,QCgBCI,EA3BC,SAACrB,GAAyB,IAAD,EACb3B,mBAAS,IADI,mBAChCiD,EADgC,KACzBC,EADyB,OAEDlD,mBAAS,IAFR,mBAEhCmD,EAFgC,KAEnBC,EAFmB,KAGvC,OACE,kCACE,sCACQ,2BAAO9B,MAAO2B,EAAO9B,SAAU,SAACC,GAAD,OAAO8B,EAAS9B,EAAEC,OAAOC,WAEhE,8BACEA,MAAO6B,EACPhC,SAAU,SAACC,GAAD,OAAOgC,EAAehC,EAAEC,OAAOC,UAE3C,6BACE,4BACEQ,QAAS,WACPH,EAAM0B,OAAOJ,EAAOE,GACpBD,EAAS,IACTE,EAAe,MAJnB,WCGOE,EAVF,SAAC3B,GACZ,OACE,6BACE,6BAAMA,EAAM4B,KAAKN,OACjB,6BAAMtB,EAAM4B,KAAKJ,aACjB,4BAAQrB,QAAS,kBAAMH,EAAM6B,WAA7B,YCGSC,EAZD,SAAC9B,GAAD,OACZ,6BACGA,EAAM+B,MAAMnB,KAAI,SAACgB,EAAMnB,GACtB,OACE,yBAAKK,IAAKL,GACR,kBAAC,EAAD,CAAMmB,KAAMA,EAAMC,OAAQ7B,EAAMQ,aAAaC,WCoBxCuB,EA5BF,WAAO,IAAD,EACS3D,mBAAqB,CAC7C,CAAEiD,MAAO,GAAIE,YAAa,MAFX,mBACVO,EADU,KACHE,EADG,KAgBjB,OACE,oCACE,6BACE,kBAAC,EAAD,CAASP,OAdM,SAACJ,EAAeE,GACnC,IAAMU,EAAWH,EAAMb,QACvBe,EAASC,EAASf,OAAO,CAAEG,MAAOA,EAAOE,YAAaA,SAcpD,6BACE,kBAAC,EAAD,CAAOO,MAAOA,EAAOvB,aAZN,SAACC,GAAD,OAAmB,WACtC,IAAMyB,EAAWH,EAAMb,QACvBgB,EAASd,OAAOX,EAAO,GACvBwB,EAASC,UCUEC,EAtBH,kBACV,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,6BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,6BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAEF,6BACE,kBAAC,IAAD,CAAMA,GAAG,SAAT,cAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWlE,IAChC,kBAAC,IAAD,CAAOiE,KAAK,WAAWC,UAAWvB,IAClC,kBAAC,IAAD,CAAOsB,KAAK,QAAQC,UAAWN,OCnBrCO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1121263c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Forms = () => {\n  const [name, setName] = useState(\"\");\n  const [blood, setBlood] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [isSport, setIsSport] = useState(false);\n  const [isReading, setIsReading] = useState(false);\n  const [isMusic, setIsMusic] = useState(false);\n  const [isTravel, setIsTravel] = useState(false);\n  const [comment, setComment] = useState(\"\");\n\n  return (\n    <>\n      <p>\n        <label>\n          名前：\n          <input\n            type=\"text\"\n            name=\"name\"\n            size={40}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </label>\n      </p>\n      <p>\n        <label>\n          血液型：\n          <select name=\"blood\" onChange={(e) => setBlood(e.target.value)}>\n            <option value=\"A\">A型</option>\n            <option value=\"B\">B型</option>\n            <option value=\"O\">O型</option>\n            <option value=\"AB\">AB型</option>\n          </select>\n        </label>\n      </p>\n      <fieldset>\n        <legend>性別</legend>\n        <p>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"male\"\n              onChange={() => setSex(\"male\")}\n            />\n            男\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"female\"\n              onChange={() => setSex(\"female\")}\n            />\n            女\n          </label>\n        </p>\n      </fieldset>\n      <fieldset>\n        <legend>趣味</legend>\n        <p>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"hobby\"\n              value=\"sports\"\n              checked={isSport}\n              onChange={() => setIsSport(!isSport)}\n            />\n            スポーツ\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"hobby\"\n              value=\"reading\"\n              checked={isReading}\n              onChange={() => setIsReading(!isReading)}\n            />\n            読書\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"hobby\"\n              value=\"music\"\n              checked={isMusic}\n              onChange={() => setIsMusic(!isMusic)}\n            />\n            音楽\n          </label>\n        </p>\n        <p>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"hobby\"\n              value=\"travel\"\n              checked={isTravel}\n              onChange={() => setIsTravel(!isTravel)}\n            />\n            旅行\n          </label>\n        </p>\n      </fieldset>\n      <p>\n        <label>\n          コメント：\n          <br />\n          <textarea\n            name=\"comments\"\n            rows={2}\n            cols={40}\n            onChange={(e) => setComment(e.target.value)}\n          ></textarea>\n        </label>\n      </p>\n      <p>名前 {name}</p>\n      <p>血液型 {blood}</p>\n      <p>性別 {sex}</p>\n      <p>スポーツ {isSport ? \"Yes\" : \"No\"}</p>\n      <p>読書 {isReading ? \"Yes\" : \"No\"}</p>\n      <p>音楽 {isMusic ? \"Yes\" : \"No\"}</p>\n      <p>旅行 {isTravel ? \"Yes\" : \"No\"}</p>\n      <p>コメント {comment}</p>\n    </>\n  );\n};\n\nexport default Forms;\n","import React, { useState } from \"react\";\n\ninterface TweetsProps {\n  handleSend: (tweetText: string) => void;\n}\n\nconst Tweets: React.FC<TweetsProps> = (props: TweetsProps) => {\n  const [tweetText, setTweetText] = useState(\"\");\n  return (\n    <div>\n      <div>\n        text{\" \"}\n        <input value={tweetText} onChange={e => setTweetText(e.target.value)} />\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            props.handleSend(tweetText);\n            setTweetText(\"\");\n          }}\n        >\n          Tweet\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Tweets;\n","import React from \"react\";\n\nexport interface TweetProps {\n  tweetData: TweetData;\n  index: number;\n  handleDelete: any;\n}\n\nexport interface TweetData {\n  name: string;\n  text: string;\n}\n\nconst Tweet: React.FC<TweetProps> = (props: TweetProps) => {\n  return (\n    <fieldset>\n      <div>{props.tweetData.name}</div>\n      <div>{props.tweetData.text}</div>\n      <button onClick={() => props.handleDelete(props.index)}>delete</button>\n    </fieldset>\n  );\n};\n\nexport default Tweet;\n","import React from \"react\";\nimport Tweet, { TweetData } from \"./tweet\";\n\ninterface TimelineProps {\n  tweets: TweetData[];\n  handleDelete: (index: number) => void;\n}\n\nconst Timeline: React.FC<TimelineProps> = (props: TimelineProps) => {\n  return (\n    <div>\n      {props.tweets.map((tweet, index) => (\n        <Tweet\n          key={index}\n          index={index}\n          tweetData={tweet}\n          handleDelete={props.handleDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Timeline;\n","import React, { useState } from \"react\";\nimport Tweets from \"./tweets\";\nimport Timeline from \"./timeline\";\nimport { TweetData } from \"./tweet\";\n\nconst Twitter = () => {\n  const [tweets, setTweets] = useState<TweetData[]>([{ name: \"\", text: \"\" }]);\n  const [name, setName] = useState<string>(\"\");\n\n  const handleSend = (tweetText: string) => {\n    const newTweets = tweets.slice();\n    setTweets(newTweets.concat({ name: name, text: tweetText }));\n  };\n\n  const handleDelete = (index: number) => {\n    const newTweets = tweets.slice();\n    newTweets.splice(index, 1);\n    setTweets(newTweets);\n  };\n\n  return (\n    <>\n      name <input onChange={(e) => setName(e.target.value)} />\n      <Tweets handleSend={handleSend} />\n      <Timeline tweets={tweets} handleDelete={handleDelete} />\n    </>\n  );\n};\n\nexport default Twitter;\n","import React, { useState } from \"react\";\n\ninterface NewTaskProps {\n  create: (title: string, description: string) => void;\n}\n\nconst NewTask = (props: NewTaskProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  return (\n    <fieldset>\n      <div>\n        title <input value={title} onChange={(e) => setTitle(e.target.value)} />\n      </div>\n      <textarea\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <div>\n        <button\n          onClick={() => {\n            props.create(title, description);\n            setTitle(\"\");\n            setDescription(\"\");\n          }}\n        >\n          send\n        </button>\n      </div>\n    </fieldset>\n  );\n};\n\nexport default NewTask;\n","import React from \"react\";\n\ninterface TaskProps {\n  task: TaskData;\n  Delete: () => void;\n}\n\nexport interface TaskData {\n  title: string;\n  description: string;\n}\n\nconst Task = (props: TaskProps) => {\n  return (\n    <div>\n      <div>{props.task.title}</div>\n      <div>{props.task.description}</div>\n      <button onClick={() => props.Delete()}>Delete</button>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task, { TaskData } from \"./task\";\n\ninterface TodosProps {\n  tasks: TaskData[];\n  handleDelete: (index: number) => () => void;\n}\n\nconst Todos = (props: TodosProps) => (\n  <div>\n    {props.tasks.map((task, index) => {\n      return (\n        <div key={index}>\n          <Task task={task} Delete={props.handleDelete(index)} />\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default Todos;\n","import React, { useState } from \"react\";\nimport NewTask from \"./newTask\";\nimport Todos from \"./todos\";\nimport { TaskData } from \"./task\";\n\nconst Todo = () => {\n  const [tasks, setTasks] = useState<TaskData[]>([\n    { title: \"\", description: \"\" },\n  ]);\n\n  const handleCreate = (title: string, description: string) => {\n    const newTasks = tasks.slice();\n    setTasks(newTasks.concat({ title: title, description: description }));\n  };\n\n  const handleDelete = (index: number) => () => {\n    const newTasks = tasks.slice();\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return (\n    <>\n      <div>\n        <NewTask create={handleCreate} />\n      </div>\n      <div>\n        <Todos tasks={tasks} handleDelete={handleDelete} />\n      </div>\n    </>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport { Route, Switch, Link, HashRouter } from \"react-router-dom\";\nimport Forms from \"./component/forms/forms\";\nimport Twitter from \"./component/twitter/twitter\";\nimport Todo from \"./component/todo/todo\";\n\nconst App = () => (\n  <HashRouter>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n    <div>\n      <Link to=\"/forms\">forms</Link>\n    </div>\n    <div>\n      <Link to=\"/twitter\">Twitter</Link>\n    </div>\n    <div>\n      <Link to=\"/todo\">ToDo List</Link>\n    </div>\n    <Switch>\n      <Route path=\"/forms\" component={Forms} />\n      <Route path=\"/twitter\" component={Twitter} />\n      <Route path=\"/todo\" component={Todo} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}